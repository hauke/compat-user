#!/bin/bash
set -e

source "`dirname $0`/config.sh"

FILE_POSTFIX=""
FLAGS=""

export GIT_COMPAT_TREE="$COMPAT_DIR"
export GIT_TREE="$LINUX_NEXT_DIR"

cd $WORKING_DIR || exit 2

function update_git_tree {
#	SRC="origin"
	echo "Dir: $1"
	cd "$1" || exit 2
#	if [[ "$2" != "$LINUX_NEXT" ]]; then
#		SRC="$SOURCE"
#	fi
	echo "git fetch $2 ($PWD)"
	git fetch $2
	git repack -d
	git reset --hard $2/master
}

update_git_tree $COMPAT_DRIVERS_DIR $COMPAT_DRIVERS_REMOTE
update_git_tree $COMPAT_DIR $COMPAT_REMOTE
update_git_tree $LINUX_NEXT_DIR $LINUX_NEXT_REMOTE

for i in noflags p c; do
	cd $COMPAT_DRIVERS_DIR

	if [[ $i != "noflags" ]]; then
		FLAGS="$FLAGS -${i}"
		# this will just be "pc" when using both
		# pendign patches and crap patches
		FILE_POSTFIX="${FILE_POSTFIX}$i"
	else
		FLAGS=""
		FILE_POSTFIX=""
	fi
	# NOTE: Although we have admin-refresh which does the two below
	# we do these individually to catch errors.
	rm -rf $COMPAT_DRIVERS_DIR/*
	rm -f .compat_*
	git checkout -f
	./scripts/admin-update.sh $FLAGS # 2>&1 > /dev/null
	RET=$?
	if [ $RET -ne 0 ]; then
		echo -en "Error while updating from linux-next"
		if [[ $i = "noflags" ]]; then
			echo -en "\n"
		else
			echo -en "with flags: $FLAGS\n"
		fi
		exit $RET
	fi

	
	if [[ $i != "noflags" ]]; then
		COMPAT_DATE_DIR="${ORIG_COMPAT_DATE_DIR}-${FILE_POSTFIX}"
	fi

	cd ..
	echo "mkdir -p $STAGING"
	mkdir -p $STAGING
	rm -rf $STAGING/${COMPAT_DATE_DIR}
	cp -a $COMPAT_DIR $STAGING/${COMPAT_DATE_DIR}
	rm -rf $STAGING/${COMPAT_DATE_DIR}/.git/

	cd $STAGING

	tar -jcf ${COMPAT_DATE_DIR}.tar.bz2 ${COMPAT_DATE_DIR}/

	# Only test this once, and only for the most complex tarballs
	if [[ $i = "noflags" ]]; then

		cd ${COMPAT_DATE_DIR}/
		${COMPAT_DIR}/bin/ckmake
		if [[ $? -ne 0 ]]; then
			cd $STAGING
			rm -rf $STAGING/*
			exit 1
		fi

		rm -f $OUTPUT/${ORIG_COMPAT_DATE_DIR}*.tar.bz2
		cd $STAGING

		bzip2 ${COMPAT_DATE_DIR}/ckmake.log
		chmod 755 ${COMPAT_DATE_DIR}/ckmake-report.log ${COMPAT_DATE_DIR}/ckmake.log.bz2

		cp ${COMPAT_DATE_DIR}/ckmake.log.bz2 $OUTPUT/ckmake-${DATE}.log.bz2
		cp ${COMPAT_DATE_DIR}/ckmake-report.log $OUTPUT/ckmake-report-${DATE}.log

		cd $OUTPUT
		ln -s ckmake-${DATE}.log.bz2 ckmake.log.bz2
		ln -s ckmake-report-${DATE}.log ckmake-report.log
	fi

	cd $STAGING
	mv -f ${COMPAT_DATE_DIR}.tar.bz2 $OUTPUT
	cd $OUTPUT

	if [[ $i = "noflags" ]]; then
		ln -sf ${COMPAT_DATE_DIR}.tar.bz2 ${COMPAT}.tar.bz2
	fi

	# The archiving is handled by archive-compat-wireless
	# This run is just for the top level directory.
	sha1sum *.tar.bz2 > sha1sums.txt

	chmod 755 $OUTPUT/*
done

cd $OUTPUT
cat ckmake-report.log
rm -rf $STAGING
